<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="boardMapper">

    <!-- #0010 : Mysql 로 변경 -->
    <insert id="write" parameterType="board" >
        INSERT INTO board (id,createDate, title, content,memberId)
        VALUES (#{id},now(),#{title},#{content},#{memberVO.userId})
    </insert>

    <select id="selectByNoForDate" resultType="string" parameterType="int">
        SELECT createDate FROM board
        WHERE id=#{VALUE}
    </select>

    <!-- #0013 : 글목록에 이름 출력되지 않는 현상 해결 -->
    <!-- result map 를 사용후 정상 출력 가능 -->
    <resultMap type="board" id="boardListRM">
        <result property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="createDate" column="createDate"/>
        <result property="content" column="content" />
        <result property="memberVO.userId" column="userId" />
        <result property="count" column="count"/>
        <result property="memberVO.userName" column="userName"/>
    </resultMap>

     <!--#0017 : error 로인해 update -->
    <!--<resultMap type="boardVO" id="boardRM" extends="boardListRM">-->
        <!--<result property="content" column="content"/>-->
        <!--<result property="memberVO.userName" column="userName"/>-->
    <!--</resultMap>-->

    <!-- #0014 : 글 상세 보기 -->
    <select id="showContent" parameterType="string" resultMap="boardListRM">
        SELECT
        id,
        title,
        createDate,
        content,
        userId,
        count,
        userName
        FROM board b, (SELECT userId,userName FROM member) m
        WHERE b.memberId = m.userId AND id=#{value}
    </select>

    <!--#0012 : BoardList & Paging-->
    <select id="getBoardList" resultMap="boardListRM" parameterType="board">
      SELECT * FROM (
             SELECT b.id,
               b.title,
               b.count,
               date_format(b.createdate, '%h:%m | %d-%M-%Y') AS createDate,
               m.userName,
               CEIL(b.rownum/10) AS page
             FROM ((
                     SELECT @rownum := @rownum + 1 AS rownum,
                       board.*
                     FROM board,
                       (SELECT @rownum := 0) r
                     ORDER BY id DESC) b,
               member m )
             WHERE b.memberId = m.userId
             ORDER BY b.Id DESC) a
             WHERE a.page=#{value}

--     SELECT
--           id,
--           title,
--           userName,
--           createDate,
--           count
--         FROM board ,(SELECT userId,userName FROM member) m
--         where m.userId = board.memberId
--         ORDER BY id DESC
    </select>

    <!-- #0016 : 글삭제 -->
    <delete id="deleteBoard">
        DELETE FROM board WHERE id=#{value}
    </delete>


    <!-- #0017 : 글수정 및 조회수 증가-->
    <!-- 조회수 증가 -->
    <update id="updateCount" parameterType="string">
        UPDATE board SET count=count+1 WHERE id=#{value}
    </update>

     <!-- 게시글 수정 -->
    <update id="updateBoard" parameterType="board" >
        UPDATE board
        SET updateDate=now() title=#{title}, content=#{content}
        WHERE id = #{bvo.id}
    </update>

    <!-- #0018 : PagingBean 추가  -->
    <!-- 페이징 처리 -->
    <select id="totalCount" resultType="int">
        SELECT COUNT(-1) FROM board
    </select>

</mapper>

              <!--select * from (-->
             <!--select b.id,-->
               <!--b.title,-->
               <!--b.count,-->
               <!--date_format(b.createdate, '%d-%m-%y') as createdate,-->
               <!--m.username,-->
               <!--ceil(b.rownum/5) as page-->
             <!--from ((-->
                     <!--select @rownum := @rownum + 1 as rownum,-->
                       <!--board.*-->
                     <!--from board,-->
                       <!--(select @rownum := 0) r-->
                     <!--order by id desc) b,-->
               <!--member m )-->
             <!--where b.memberid = m.id-->
             <!--order by b.id desc) a-->
             <!--where a.page=#{value}-->




<!--<select id="getboardlist" parameterType="string" >-->
<!--select * from (-->
<!--select b.id,-->
<!--b.title,-->
<!--b.count,-->
<!--date_format(b.createdate, '%d-%m-%y') as createdate,-->
<!--m.username,-->
<!--ceil(b.rownum/5) as page-->
<!--from ((-->
<!--select @rownum := @rownum + 1 as rownum,-->
<!--board.*-->
<!--from board,-->
<!--(select @rownum := 0) r-->
<!--order by id desc) b,-->
<!--member m )-->

<!--where b.memberid = m.id-->
<!--order by b.id desc) a-->
<!--where a.page=#{value}-->
<!--</select>-->



        <!-- 특정 no에 해당하는 상세글보는 resultaMap -->
        <!--<resultMap type="boardVO" id="boardRM" extends="boardListRM">-->
        <!--<result property="content" column="content"/>-->
        <!--<result property="memberVO.id" column="id"/>-->

        <!--</resultMap>-->


        <!--<select id="showContent" parameterType="string" resultMap="boardRM">-->
        <!--SELECT no, title, count, createDate, content, m.id, m.userName-->
        <!--FROM board s, member m-->
        <!--WHERE s.id = m.id AND no=#{value}-->
        <!--</select>-->


<!-- 오라클문법 :: write
<selectKey keyProperty="id" resultType="int" order="BEFORE">
            SELECT board_seq.nextVal FROM dual
        </selectKey>
        INSERT INTO board (id, createDate, title, content, state, userId )
        VALUES (#{id},#{sysdate},#{title},#{content},#{state},#{boardVO.userId})
-->

<!-- mysql write // 게시물의 증가는 필요없음  autoincrease & seq x
INSERT INTO board (createDate, title, content, state,memberId,count)
VALUES (now(),'#{title},#{content},'1',#{boardVO.userId},'0')


<selectKey keyProperty="no" resultType="int" order="BEFORE">
            SELECT id FROM board
        </selectKey>

useGeneratedKeys="true" keyProperty="id"

-->

